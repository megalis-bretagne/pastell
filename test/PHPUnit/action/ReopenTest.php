<?php

class ReopenTest extends PastellTestCase
{
    /** @var TypeDossierLoader */
    private $typeDossierLoader;

    /**
     * @throws Exception
     */
    protected function setUp(): void
    {
        parent::setUp();
        $this->typeDossierLoader = $this->getObjectInstancier()->getInstance(TypeDossierLoader::class);
    }

    protected function tearDown(): void
    {
        parent::tearDown();
        $this->typeDossierLoader->unload();
    }

    /**
     * @throws Exception
     */
    public function testCasNominal()
    {
        $this->typeDossierLoader->createTypeDossierDefinitionFile("double-ged-facultatif");
        $id_ce = $this->createConnector('FakeGED', 'FakeGED')['id_ce'];
        $this->associateFluxWithConnector($id_ce, "double-ged-facultatif", "GED", 1, 0);
        $this->associateFluxWithConnector($id_ce, "double-ged-facultatif", "GED", 1, 1);

        $info = $this->createDocument("double-ged-facultatif");

        $id_d = $info['id_d'];
        $this->configureDocument($id_d, ['envoi_depot_1' => 'On', 'envoi_depot_2' => '']);


        $result = $this->triggerActionOnDocument($id_d, "orientation");
        $this->assertTrue($result);
        $this->assertLastDocumentAction('preparation-send-ged_1', $id_d);
        $this->triggerActionOnDocument($id_d, "send-ged_1");
        $this->assertLastDocumentAction('send-ged_1', $id_d);
        $this->triggerActionOnDocument($id_d, "orientation");
        $this->assertLastDocumentAction('termine', $id_d);
        $result = $this->triggerActionOnDocument($id_d, "reouverture");
        $this->assertTrue($result);
        $this->assertLastDocumentAction('send-ged_1', $id_d);
    }
}
