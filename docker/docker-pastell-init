#! /bin/bash
set -e

#Utiliser pour créer un fichier de settings en fonction des variables d'environnement (envoyé par Docker)

cat <<EOF
<?php

define("SITE_BASE","${PASTELL_SITE_BASE}");
define("WEBSEC_BASE","${WEBSEC_BASE}");

define("TIMEZONE", "${TIMEZONE:-Europe/Paris}");
define("BD_DSN","mysql:dbname=${MYSQL_DATABASE:-pastell};host=${MYSQL_HOST:-localhost};port=${MYSQL_PORT:-3306};charset=utf8mb4");
define("BD_DBNAME","${MYSQL_DATABASE:-pastell}");
define("BD_USER","${MYSQL_USER:-user}");
define("BD_PASS","${MYSQL_PASSWORD:-user}");

define("BD_DSN_TEST","mysql:dbname=${MYSQL_DATABASE_TEST:-pastell_test};host=${MYSQL_HOST_TEST:-localhost};port=${MYSQL_PORT_TEST:-3306};charset=utf8mb4");
define("BD_DBNAME_TEST","${MYSQL_DATABASE_TEST:-pastell_test}");
define("BD_USER_TEST","${MYSQL_USER_TEST:-user}");
define("BD_PASS_TEST","${MYSQL_PASSWORD_TEST:-user}");

define("WORKSPACE_PATH" , "/data/workspace");

define("PLATEFORME_MAIL","${PLATEFORME_MAIL}");

define("REDIS_SERVER","${REDIS_SERVER}");
define("REDIS_PORT",${REDIS_PORT:-6379});

ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

define("LOG_FILE","/data/log/pastell.log");
define("LOG_LEVEL", Monolog\Logger::${LOG_LEVEL:-INFO});

define("SENTRY_DSN", "${SENTRY_DSN}");
define("SENTRY_ENVIRONMENT", "${SENTRY_ENVIRONMENT:-dev}");

define("PES_VIEWER_URL", "${PES_VIEWER_URL:-http://pes-viewer:8888}");

define("MAILER_DSN", "${MAILER_DSN:-null://null}");

define("ADMIN_EMAIL", "${ADMIN_EMAIL:-test@libriciel.net}");

define("PASTELL_ADMIN_EMAIL", "${PASTELL_ADMIN_EMAIL:-test@libriciel.net}");
define("PASTELL_ADMIN_LOGIN", "${PASTELL_ADMIN_LOGIN:-admin}");

\$packs = [];
if (${PACK_CHORUS_PRO:-false}) {
  \$packs["pack_chorus_pro"]=true;
}
if (${PACK_MARCHE:-false}) {
  \$packs["pack_marche"]=true;
}
if (${PACK_URBANISME:-false}) {
  \$packs["pack_urbanisme"]=true;
}
if (${PACK_RH:-false}) {
  \$packs["pack_rh"]=true;
}
if (${PACK_TEST:-false}) {
  \$packs["pack_test"]=true;
}
if (${PACK_LIBERSIGN:-false}) {
  \$packs["pack_libersign"]=true;
}
if (${PACK_DOSSIER_SEANCE:-false}) {
  \$packs["pack_dossier_seance"]=true;
}

if (${PACK_RECUP_PARAPHEUR_CORBEILLE_CONNECTOR:-false}) {
  \$packs["pack_recup_parapheur_corbeille_connector"]=true;
}

if (${PACK_RECUP_FIN_PARAPHEUR_CONNECTOR:-false}) {
  \$packs["pack_recup_fin_parapheur_connector"]=true;
}

define("LIST_PACK", \$packs);

define("NB_WORKERS", "${NB_WORKERS:-5}");
define("JOURNAL_MAX_AGE_IN_MONTHS", "${JOURNAL_MAX_AGE_IN_MONTHS:-2}");
define("UNLOK_JOB_ERROR_AT_STARTUP", "${UNLOK_JOB_ERROR_AT_STARTUP:-false}");
define("NB_JOB_PAR_VERROU", "${NB_JOB_PAR_VERROU:-1}");
define("HTTP_PROXY_URL", "${HTTP_PROXY_URL:-}");
define("NO_PROXY", "${NO_PROXY:-localhost,127.0.0.1,::1,seda-generator,pes-viewer}");

define("USE_UUID_FOR_DOCUMENT", ${USE_UUID_FOR_DOCUMENT:-false});

define("S3_URL", "${S3_URL:-http://minio:9000/}");
define("S3_KEY", "${S3_KEY:-minioadmin}");
define("S3_SECRET", "${S3_SECRET:-minioadmin}");
define("S3_BUCKET_JOURNAL", "${S3_BUCKET_JOURNAL:-journal-preuves}");
define("USE_EXTERNAL_STORAGE_FOR_JOURNAL_PROOF", ${USE_EXTERNAL_STORAGE_FOR_JOURNAL_PROOF:-false});

EOF

env | grep '^TOGGLE_' | sed "s/^TOGGLE_\([^=]*\)=\(.*\)/\$feature_toggle[Pastell\\\Service\\\FeatureToggle\\\\\1::class] = \2;/g"
