image: docker:latest

stages:
    - build
    - test
    - release

build:
  stage: build
  tags:
    - docker-build
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG"

services:
    - mysql

variables:
    TEST_IMAGE_TAG: "${CI_BUILD_REF_NAME}-${CI_BUILD_REF}-test"
    RELEASE_IMAGE_TAG: "${CI_BUILD_REF_SLUG}"
    MYSQL_DATABASE: pastell_test
    MYSQL_USER: user
    MYSQL_PASSWORD: user
    MYSQL_RANDOM_ROOT_PASSWORD: "yes"

test:
    stage: test
    image : "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG"
    script:
        - cp /var/www/pastell/ci-resources/LocalSettings.php /var/www/pastell/
        - /var/www/pastell/vendor/bin/phpunit --coverage-text --colors=never -c /var/www/pastell/test/PHPUnit/phpunit.xml

acceptance_test:
    stage: test
    image : "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG"
    script:
        - cp /var/www/pastell/ci-resources/LocalSettings.php /var/www/pastell/
        - php /var/www/pastell/ci-resources/init-docker.php
        - /var/www/pastell/vendor/bin/codecept run -c /var/www/pastell/test/codeception

release:
    stage: release
    tags:
        - docker-build
    script:
        - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
        - docker pull "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG"
        - docker tag "$CI_REGISTRY_IMAGE:$TEST_IMAGE_TAG" "$CI_REGISTRY_IMAGE:$RELEASE_IMAGE_TAG"
        - echo "Push to $CI_REGISTRY_IMAGE:$RELEASE_IMAGE_TAG"
        - docker push "$CI_REGISTRY_IMAGE:$RELEASE_IMAGE_TAG"